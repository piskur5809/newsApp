{"ast":null,"code":"import NewsService from '../services/api-service';\nimport store from '../store';\nvar newsService = new NewsService();\nexport var addNews = function addNews(news) {\n  return {\n    type: 'ADD_NEWS',\n    payload: news\n  };\n};\nexport var viewNews = function viewNews() {\n  return {\n    type: 'VIEW_NEWS'\n  };\n};\nexport var likeNews = function likeNews() {\n  return {\n    type: 'LIKE_NEWS'\n  };\n};\nexport var hideNews = function hideNews() {\n  return {\n    type: 'HIDE_NEWS'\n  };\n};\nexport function fetchPosts() {\n  return newsService.getNews().then(function (news) {\n    return store.dispatch(addNews(news));\n  });\n}","map":{"version":3,"sources":["/home/dmitry/Рабочий стол/NewsAppRedux/client/src/actions/actions.js"],"names":["NewsService","store","newsService","addNews","news","type","payload","viewNews","likeNews","hideNews","fetchPosts","getNews","then","dispatch"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,IAAMC,WAAW,GAAG,IAAIF,WAAJ,EAApB;AAGA,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC5B,SAAM;AACFC,IAAAA,IAAI,EAAE,UADJ;AAEFC,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALK;AAOP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAACF,IAAAA,IAAI,EAAE;AAAP,GAAP;AAAA,CAAjB;AAEP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAACH,IAAAA,IAAI,EAAE;AAAP,GAAP;AAAA,CAAjB;AAEP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAO;AAACJ,IAAAA,IAAI,EAAE;AAAP,GAAP;AAAA,CAAjB;AAIP,OAAO,SAASK,UAAT,GAAsB;AAEzB,SAAOR,WAAW,CAACS,OAAZ,GAAsBC,IAAtB,CAA2B,UAAAR,IAAI;AAAA,WAAIH,KAAK,CAACY,QAAN,CAAeV,OAAO,CAACC,IAAD,CAAtB,CAAJ;AAAA,GAA/B,CAAP;AAEH","sourcesContent":["import NewsService from '../services/api-service';\nimport store from '../store'\nconst newsService = new NewsService();\n\n\nexport const addNews = (news) => {\n     return{\n         type: 'ADD_NEWS',\n         payload: news\n     };\n };\n\nexport const viewNews = () => ({type: 'VIEW_NEWS'});\n\nexport const likeNews = () => ({type: 'LIKE_NEWS'});\n\nexport const hideNews = () => ({type: 'HIDE_NEWS'});\n\n\n\nexport function fetchPosts() {\n\n    return newsService.getNews().then(news => store.dispatch(addNews(news)))\n  \n}"]},"metadata":{},"sourceType":"module"}