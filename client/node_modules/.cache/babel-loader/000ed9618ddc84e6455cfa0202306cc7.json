{"ast":null,"code":"import store from '../store';\nimport axios from 'axios'; // import getItems from '../services/api-service'\n// const newsService = new NewsService();\n\nexport var addNews = function addNews() {\n  axios.get('/api/items').then(function (res) {\n    console.log(res.data, \"res.data\");\n    store.dispatch({\n      type: 'ADD_NEWS',\n      payload: res.data,\n      loaded: true\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var viewNews = function viewNews(id, views) {\n  return function (dispatch) {\n    debugger;\n    dispatch({\n      type: 'VIEW_NEWS',\n      id: id\n    });\n    axios.post(\"/api/items/\".concat(id), {\n      views: ++views\n    }) // setItemLikes(id, index)\n    .then(function (res) {\n      return dispatch({\n        type: 'VIEW_NEWS',\n        id: id\n      });\n      console.log(res.data, \"res.data like\");\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // ({type: '', payload: id, index: index});\n// store.dispatch({\n//     type: 'LIKE_NEWS',\n//     id: id\n//  })\n// axios\n// .post(`/api/items/${id}`)\n// .then(res=>{\n//     console.log(res.data,\"res.data like\")\n//     })\n//     };\n\nexport var likeNews = function likeNews(id, likes) {\n  return function (dispatch) {\n    debugger;\n    axios.post(\"/api/items/\".concat(id), {\n      likes: ++likes\n    }) // setItemLikes(id, index)\n    .then(function (res) {\n      return dispatch({\n        type: 'LIKE_NEWS',\n        id: id\n      });\n    });\n  };\n}; // ({type: 'LIKE_NEWS', payload: id});\n\nexport var searchNews = function searchNews(text) {\n  return {\n    type: 'SEARCH_NEWS',\n    payload: text\n  };\n};\nexport var setItemsLoaded = function setItemsLoaded() {\n  return {\n    type: 'ITEMS_LOADED'\n  };\n}; // const setItemLikes = (id, index) => {\n//     let like = store.getState().articles[index].likes\n//    console.log(like, \"like\")\n//    return axios\n//     .post(`/api/items/${id}`, {likes: ++like})\n// }\n// export function fetchPosts() {\n//  addNews()\n//     return newsService.getNews().then(news => store.dispatch(addNews(news)));\n// };","map":{"version":3,"sources":["/home/dmitry/Рабочий стол/newsAPP 2.0/client/src/actions/actions.js"],"names":["store","axios","addNews","get","then","res","console","log","data","dispatch","type","payload","loaded","catch","err","viewNews","id","views","post","likeNews","likes","searchNews","text","setItemsLoaded"],"mappings":"AACA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAGA;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzBD,EAAAA,KAAK,CACJE,GADD,CACK,YADL,EAECC,IAFD,CAEM,UAAAC,GAAG,EAAG;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EAAqB,UAArB;AACFR,IAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,UADO;AAEbC,MAAAA,OAAO,EAAEN,GAAG,CAACG,IAFA;AAGbI,MAAAA,MAAM,EAAE;AAHK,KAAf;AAKD,GATD,EAUCC,KAVD,CAUO,UAAAC,GAAG;AAAA,WACNR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CADM;AAAA,GAVV;AAaF,CAdK;AAiBP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD,EAAKC,KAAL;AAAA,SAAe,UAACR,QAAD,EAAa;AAChD;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,WADD;AAELM,MAAAA,EAAE,EAAEA;AAFC,KAAD,CAAR;AAIAf,IAAAA,KAAK,CACJiB,IADD,sBACoBF,EADpB,GAC0B;AAACC,MAAAA,KAAK,EAAE,EAAEA;AAAV,KAD1B,EAEJ;AAFI,KAGCb,IAHD,CAGM,UAAAC,GAAG,EAAE;AACT,aAAQI,QAAQ,CAAC;AACXC,QAAAA,IAAI,EAAE,WADK;AAEXM,QAAAA,EAAE,EAAEA;AAFO,OAAD,CAAhB;AAIEV,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EAAqB,eAArB;AACC,KATL,EAUKK,KAVL,CAUW,UAAAC,GAAG;AAAA,aACNR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CADM;AAAA,KAVd;AAYC,GAlBmB;AAAA,CAAjB,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAEH,EAAF,EAAMI,KAAN;AAAA,SAAgB,UAACX,QAAD,EAAa;AACjD;AACAR,IAAAA,KAAK,CACJiB,IADD,sBACoBF,EADpB,GAC0B;AAACI,MAAAA,KAAK,EAAE,EAAEA;AAAV,KAD1B,EAEJ;AAFI,KAGChB,IAHD,CAGM,UAAAC,GAAG,EAAE;AACT,aAAQI,QAAQ,CAAC;AACXC,QAAAA,IAAI,EAAE,WADK;AAEXM,QAAAA,EAAE,EAAEA;AAFO,OAAD,CAAhB;AAIG,KARL;AASC,GAXmB;AAAA,CAAjB,C,CAaP;;AAEA,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAW;AAACZ,IAAAA,IAAI,EAAE,aAAP;AAAsBC,IAAAA,OAAO,EAAEW;AAA/B,GAAX;AAAA,CAAnB;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AAACb,IAAAA,IAAI,EAAE;AAAP,GAAP;AAAA,CAAvB,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport store from '../store'\nimport axios from 'axios';\n// import getItems from '../services/api-service'\n\n\n// const newsService = new NewsService();\n\nexport const addNews = () => {\n    axios\n    .get('/api/items')\n    .then(res=> {\n        console.log(res.data,\"res.data\")\n      store.dispatch({\n        type: 'ADD_NEWS',\n        payload: res.data,\n        loaded: true \n        });\n    })\n    .catch(err =>\n        console.log(err))\n\n };\n\n   \nexport const viewNews = (id, views) => (dispatch) =>{\n    debugger\n    dispatch({\n        type: 'VIEW_NEWS',\n        id: id\n     })\n    axios\n    .post(`/api/items/${id}`, {views: ++views})\n// setItemLikes(id, index)\n    .then(res=>{\n      return  dispatch({\n            type: 'VIEW_NEWS',\n            id: id\n         })\n        console.log(res.data,\"res.data like\")\n        })\n        .catch(err =>\n            console.log(err))\n    };\n\n// ({type: '', payload: id, index: index});\n// store.dispatch({\n//     type: 'LIKE_NEWS',\n//     id: id\n//  })\n// axios\n// .post(`/api/items/${id}`)\n// .then(res=>{\n//     console.log(res.data,\"res.data like\")\n//     })\n//     };\n    \n    \n\nexport const likeNews = ( id, likes) => (dispatch) =>{\n    debugger\n    axios\n    .post(`/api/items/${id}`, {likes: ++likes})\n// setItemLikes(id, index)\n    .then(res=>{\n      return  dispatch({\n            type: 'LIKE_NEWS',\n            id: id\n         })\n        })\n    };\n\n// ({type: 'LIKE_NEWS', payload: id});\n\nexport const searchNews = (text) => ({type: 'SEARCH_NEWS', payload: text});\n\nexport const setItemsLoaded = () => ({type: 'ITEMS_LOADED'});\n\n// const setItemLikes = (id, index) => {\n//     let like = store.getState().articles[index].likes\n//    console.log(like, \"like\")\n//    return axios\n//     .post(`/api/items/${id}`, {likes: ++like})\n\n// }\n// export function fetchPosts() {\n//  addNews()\n//     return newsService.getNews().then(news => store.dispatch(addNews(news)));\n// };\n"]},"metadata":{},"sourceType":"module"}